<?xml version='1.0'?>

<robot name="my_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <link name="robot_footprint"></link>

  <joint name="robot_footprint_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="robot_footprint"/>
    <child link="chassis" />
  </joint>

  <xacro:property name="chassis_length" value=".5"/>
  <xacro:property name="chassis_width" value=".4"/>
  <xacro:property name="chassis_height" value=".55"/>
  <xacro:property name="chassis_mass" value="5.0"/>

  <xacro:property name="wheel_length" value="0.1"/>
  <xacro:property name="wheel_mass" value="1.0"/>
  <xacro:property name="wheel_radius" value="0.30"/>
  <xacro:property name="wheel_x" value="${(chassis_length / 2) - wheel_radius}"/>
  <xacro:property name="wheel_y" value="${(chassis_width / 2) + wheel_length}"/>

  <xacro:property name="caster_mass" value="5"/>
  <xacro:property name="caster_radius" value="0.025"/>
  <xacro:property name="caster_x" value="${(chassis_length / 2) - caster_radius}"/>
  <xacro:property name="caster_y" value="${-1.0 * (wheel_radius - caster_radius)}"/>

  <xacro:property name="camera_size" value="0.05 0.1 0.05"/>
  <xacro:property name="camera_x" value="${chassis_length / 2}"/>

  <xacro:property name="lidar_z" value="${0.15 + (chassis_height / 2)}"/>
  <xacro:property name="lidar_x" value="${(chassis_length / 2) - 0.05}"/>

  <xacro:property name="diff_drive_wheel_spec">
    <!-- This works on Melodic, but not Kinetic:
    <wheelSeparation>${wheel_y * 2}"</wheelSeparation> -->
    <wheelSeparation>0.6</wheelSeparation>
    <!-- This works on Melodic, but not Kinetic:
    <wheelDiameter>${wheel_radius * 2}</wheelDiameter> -->
    <wheelDiameter>0.6</wheelDiameter>
    <torque>30</torque>
    <wheelTorque>15</wheelTorque>
    <wheelAcceleration>0</wheelAcceleration>
  </xacro:property>

  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name='${prefix}_wheel'>
      <visual name='visual'>
        <origin xyz="0 0 0" rpy=" 0 1.5707 1.5707"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
        </geometry>
      </visual>
      <collision name='collision'>
        <origin xyz="0 0 0" rpy=" 0 1.5707 1.5707"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="${wheel_mass}"/>
        <origin xyz="0 0 0" rpy=" 0 0 0"/>
        <inertia
            ixx="0.1" ixy="0" ixz="0"
            iyy="0.1" iyz="0"
            izz="0.1"
        />
      </inertial>
    </link>
    <joint type="continuous" name="${prefix}_wheel_hinge">
      <origin xyz="${x_reflect * wheel_x} ${y_reflect * wheel_y} 0" rpy="0 0 0"/>
      <child link="${prefix}_wheel"/>
      <parent link="chassis"/>
      <axis xyz="0 1 0" rpy="0 0 0"/>
      <limit effort="10000" velocity="1000"/>
      <dynamics damping="0.0" friction="0.0"/>
    </joint>
    <gazebo reference="${prefix}_wheel">
      <material>Gazebo/Black</material>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="caster" params="prefix x_reflect">
    <link name='${prefix}_caster_wheel'>
      <visual name='caster_visual'>
        <origin xyz="0 0 0" rpy=" 0 0 0"/>
        <geometry>
          <sphere radius="${caster_radius}"/>
        </geometry>
      </visual>
      <collision name='caster_collision'>
        <origin xyz="0 0 0" rpy=" 0 0 0"/>
        <geometry>
          <sphere radius="${caster_radius -0.005}"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="${caster_mass}"/>
        <origin xyz="0 0 0" rpy=" 0 0 0"/>
        <inertia
            ixx="0.1" ixy="0" ixz="0"
            iyy="0.1" iyz="0"
            izz="0.1"
        />
      </inertial>
    </link>
    <joint type="fixed" name="${prefix}_caster_hinge">
      <origin xyz="${x_reflect * caster_x} 0 ${caster_y}" rpy=" 0 0 0"/>
      <child link="${prefix}_caster_wheel"/>
      <parent link="chassis"/>
    </joint>
    <gazebo reference="${prefix}_caster_wheel">
      <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <gazebo reference="${prefix}_caster_wheel">
      <material>Gazebo/Black</material>
    </gazebo>

  </xacro:macro>

  <xacro:wheel prefix="left" x_reflect="-1" y_reflect="1"/>
  <xacro:wheel prefix="right" x_reflect="-1" y_reflect="-1"/>
  <xacro:caster prefix="front" x_reflect="1"/>
  <xacro:caster prefix="back" x_reflect="-1"/>

  <link name="camera">
    <visual name='camera_visual'>
      <origin xyz="0 0 0" rpy=" 0 0 0"/>
      <geometry>
        <box size="${camera_size}"/>
      </geometry>
    </visual>
    <collision name='camera_collision'>
      <origin xyz="0 0 0" rpy=" 0 0 0"/>
      <geometry>
        <box size="${camera_size}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0.0 0 0" rpy=" 0 0 0"/>
      <inertia
          ixx="1e-6" ixy="0" ixz="0"
          iyy="1e-6"   iyz="0"
          izz="1e-6"
      />
    </inertial>
  </link>
  <joint type="fixed" name="camera_joint">
    <origin xyz="${camera_x} 0 0" rpy="0 0 0"/>
    <child link="camera"/>
    <parent link="chassis"/>
    <axis xyz="0 1 0" rpy="0 0 0"/>
  </joint>
  <gazebo reference="camera">
    <material>Gazebo/Blue</material>
  </gazebo>

  <link name="hokuyo">
    <visual name='hokuyo_visual'>
      <origin xyz="0 0 0" rpy=" 0 0 0"/>
      <geometry>
        <mesh filename="package://my_robot/meshes/hokuyo.dae"/>
      </geometry>
    </visual>
    <collision name='hokuyo_collision'>
      <origin xyz="0 0 0" rpy=" 0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1e-5"/>
      <origin xyz="0.0 0 0" rpy=" 0 0 0"/>
      <inertia
          ixx="1e-6" ixy="0" ixz="0"
          iyy="1e-6"   iyz="0"
          izz="1e-6"
      />
    </inertial>
  </link>
  <joint type="fixed" name="hokuyo_joint">
    <origin xyz="${lidar_x} 0 ${lidar_z}" rpy="0 0 0"/>
    <child link="hokuyo"/>
    <parent link="chassis"/>
    <axis xyz="0 1 0" rpy="0 0 0"/>
  </joint>

  <link name='chassis'>
    <pose>0 0 0.1 0 0 0</pose>

    <inertial>
      <mass value="${chassis_mass}"/>
      <origin xyz="0.0 0 0" rpy=" 0 0 0"/>
      <inertia
          ixx="0.1" ixy="0" ixz="0"
          iyy="0.1" iyz="0"
          izz="0.1"
      />
    </inertial>

    <collision name='collision'>
      <origin xyz="0 0 0" rpy=" 0 0 0"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>

    <visual name='chassis_visual'>
      <origin xyz="0 0 0" rpy=" 0 0 0"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </visual>
  </link>
  <gazebo reference="chassis">
    <material>Gazebo/Gray</material>
  </gazebo>

  <xacro:include filename="$(find my_robot)/urdf/my_robot.gazebo" />

</robot>
